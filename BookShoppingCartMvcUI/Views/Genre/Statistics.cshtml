@model IEnumerable<BookShoppingCartMvcUI.Models.DTOs.GenreStatsDTO>
@{
    Layout = "_AdminLayout";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Thống kê thể loại</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
        }

        .highlighted-title {
            font-weight: bold;
            color: #007bff; /* Màu sắc nổi bật, bạn có thể thay đổi theo ý muốn */
            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2); /* Tạo hiệu ứng bóng chữ */
        }

        .chart-container {
            background-color: #f8f9fa; /* Nền nhẹ nhàng cho khu vực biểu đồ */
            border-radius: 8px; /* Bo góc cho khu vực biểu đồ */
            padding: 20px; /* Khoảng cách giữa nội dung và viền */
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Tạo hiệu ứng bóng */
        }
    </style>
</head>
<body>
    <div class="container mt-4">
        <h1 class="mb-4 highlighted-title">Thống kê số lượng sách theo thể loại</h1>
        <div class="chart-container">
            <canvas id="genreChart" width="400" height="200"></canvas>
        </div>
        <script>
            var ctx = document.getElementById('genreChart').getContext('2d');
            var genreStats = @Html.Raw(Json.Serialize(Model));
            var labels = genreStats.map(stat => stat.genreName);
            var data = genreStats.map(stat => stat.bookCount);

            var myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Số lượng sách',
                        data: data,
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        x: {
                            ticks: {
                                font: {
                                    weight: 'bold' // Chữ trên trục x đậm hơn
                                }
                            }
                        },
                        y: {
                            ticks: {
                                font: {
                                    weight: 'bold' // Chữ trên trục y đậm hơn
                                }
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            labels: {
                                font: {
                                    weight: 'bold' // Chữ trên legend đậm hơn
                                }
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function (tooltipItem) {
                                    return tooltipItem.label + ': ' + tooltipItem.raw + ' sách';
                                }
                            },
                            titleFont: {
                                weight: 'bold' // Chữ tiêu đề tooltip đậm hơn
                            },
                            bodyFont: {
                                weight: 'bold' // Chữ nội dung tooltip đậm hơn
                            }
                        }
                    }
                }
            });
        </script>
    </div>
</body>
</html>
